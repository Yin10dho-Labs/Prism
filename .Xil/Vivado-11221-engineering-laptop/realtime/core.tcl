# 
# Synthesis run script generated by Vivado
# 

namespace eval rt {
    variable rc
}
set rt::rc [catch {
  uplevel #0 {
    set ::env(BUILTIN_SYNTH) true
    source $::env(HRT_TCL_PATH)/rtSynthPrep.tcl
    rt::HARTNDb_resetJobStats
    rt::HARTNDb_resetSystemStats
    rt::HARTNDb_startSystemStats
    rt::HARTNDb_startJobStats
    set rt::cmdEcho 0
    rt::set_parameter writeXmsg true
    rt::set_parameter enableParallelHelperSpawn true
    set ::env(RT_TMP) "./.Xil/Vivado-11221-engineering-laptop/realtime/tmp"
    if { [ info exists ::env(RT_TMP) ] } {
      file delete -force $::env(RT_TMP)
      file mkdir $::env(RT_TMP)
    }

    rt::delete_design

    rt::set_parameter datapathDensePacking false
    set rt::partid xc7z020clg484-3
    source $::env(HRT_TCL_PATH)/rtSynthParallelPrep.tcl
     file delete -force synth_hints.os

    set rt::multiChipSynthesisFlow false
    source $::env(SYNTH_COMMON)/common.tcl
    set rt::defaultWorkLibName xil_defaultlib
    rt::set_parameter defaultVhdlWorkLib xil_defaultlib

    rt::set_parameter loadVhdl2008Libs false
    rt::set_parameter loadVhdl2019Libs false
    rt::set_parameter deferParseUntilElab true
    rt::set_parameter sortHdlCommandLine true
    set rt::useElabCache false
    if {$rt::useElabCache == false} {
      rt::read_verilog -sv /home/mihir/xilinx/Vivado/2024.2/data/ip/xpm/xpm_memory/hdl/xpm_memory.sv
      rt::read_verilog {
      /home/mihir/Prism/hardware/fpga_design/fpga_design.srcs/sources_1/new/thread.v
      /home/mihir/Prism/hardware/fpga_design/fpga_design.srcs/sources_1/new/barrelShifter.v
      /home/mihir/Prism/hardware/fpga_design/fpga_design.srcs/sources_1/new/instructionDecode.v
      /home/mihir/Prism/hardware/fpga_design/fpga_design.srcs/sources_1/new/registerFIle.v
      /home/mihir/Prism/hardware/fpga_design/fpga_design.srcs/sources_1/new/smolBarrelShift.v
      /home/mihir/Prism/hardware/fpga_design/fpga_design.srcs/sources_1/new/alu.v
      /home/mihir/Prism/hardware/fpga_design/fpga_design.srcs/sources_1/new/flags.v
      /home/mihir/Prism/hardware/fpga_design/fpga_design.srcs/sources_1/new/pc.v
      /home/mihir/Prism/hardware/fpga_design/fpga_design.srcs/sources_1/new/opSel.v
      /home/mihir/Prism/hardware/fpga_design/fpga_design.srcs/sources_1/new/memoryShift.v
      /home/mihir/Prism/hardware/fpga_design/fpga_design.srcs/sources_1/new/core.v
    }
      rt::read_vhdl -lib xpm /home/mihir/xilinx/Vivado/2024.2/data/ip/xpm/xpm_VCOMP.vhd
      rt::read_vhdl -lib blk_mem_gen_v8_4_9 /home/mihir/Prism/hardware/fpga_design/fpga_design.gen/sources_1/ip/singlePortBlock18/hdl/blk_mem_gen_v8_4_vhsyn_rfs.vhd
      rt::read_vhdl -lib xil_defaultlib {
      /home/mihir/Prism/hardware/fpga_design/fpga_design.gen/sources_1/ip/singlePortBlock18/synth/singlePortBlock18.vhd
      /home/mihir/Prism/hardware/fpga_design/fpga_design.gen/sources_1/ip/dualPortBlock18/synth/dualPortBlock18.vhd
      /home/mihir/Prism/hardware/fpga_design/fpga_design.gen/sources_1/ip/DualPortBlock16/synth/DualPortBlock16.vhd
      /home/mihir/Prism/hardware/fpga_design/fpga_design.gen/sources_1/ip/dualPortBlockAXI18/synth/dualPortBlockAXI18.vhd
      /home/mihir/Prism/hardware/fpga_design/fpga_design.gen/sources_1/ip/programBlock16/synth/programBlock16.vhd
    }
      rt::filesetChecksum
    }
    rt::set_parameter usePostFindUniquification false
    set rt::top core
    rt::set_parameter enableIncremental true
    rt::set_parameter markDebugPreservationLevel "enable"
    set rt::reportTiming false
    rt::set_parameter elaborateOnly false
    rt::set_parameter elaborateRtl false
    rt::set_parameter eliminateRedundantBitOperator true
    rt::set_parameter linterFlow true
    rt::set_parameter synthReportEmptyAndUndriven false
    rt::set_parameter dataflowBusHighlighting false
    rt::set_parameter generateDataflowBusNetlist false
    rt::set_parameter dataFlowViewInElab false
    rt::set_parameter busViewFixBrokenConnections false
    rt::set_parameter elaborateRtlOnlyFlow false
    rt::set_parameter writeBlackboxInterface true
    rt::set_parameter merge_flipflops true
# MODE: 
    rt::set_parameter webTalkPath {}
    rt::set_parameter synthDebugLog false
    rt::set_parameter printModuleName false
    rt::set_parameter enableSplitFlowPath "./.Xil/Vivado-11221-engineering-laptop/"
    set ok_to_delete_rt_tmp true 
    if { [rt::get_parameter parallelDebug] } { 
       set ok_to_delete_rt_tmp false 
    } 
    if {$rt::useElabCache == false} {
        set oldMIITMVal [rt::get_parameter maxInputIncreaseToMerge]; rt::set_parameter maxInputIncreaseToMerge 1000
        set oldCDPCRL [rt::get_parameter createDfgPartConstrRecurLimit]; rt::set_parameter createDfgPartConstrRecurLimit 1
        $rt::db readXRFFile
      rt::run_synthesis -module $rt::top
        rt::set_parameter maxInputIncreaseToMerge $oldMIITMVal
        rt::set_parameter createDfgPartConstrRecurLimit $oldCDPCRL
    }

    set rt::flowresult [ source $::env(SYNTH_COMMON)/flow.tcl ]
    rt::HARTNDb_stopJobStats
    rt::HARTNDb_reportJobStats "Synthesis Optimization Runtime"
    rt::HARTNDb_stopSystemStats
    if { $rt::flowresult == 1 } { return -code error }


  set hsKey [rt::get_parameter helper_shm_key] 
  if { $hsKey != "" && [info exists ::env(BUILTIN_SYNTH)] && [rt::get_parameter enableParallelHelperSpawn] } { 
     $rt::db killSynthHelper $hsKey
  } 
  rt::set_parameter helper_shm_key "" 
    if { [ info exists ::env(RT_TMP) ] } {
      if { [info exists ok_to_delete_rt_tmp] && $ok_to_delete_rt_tmp } { 
        file delete -force $::env(RT_TMP)
      }
    }

    source $::env(HRT_TCL_PATH)/rtSynthCleanup.tcl
  } ; #end uplevel
} rt::result]

if { $rt::rc } {
uplevel #0 { 
   $rt::db resetHdlParse
   set hsKey [rt::get_parameter helper_shm_key] 
   if { $hsKey != "" && [info exists ::env(BUILTIN_SYNTH)] && [rt::get_parameter enableParallelHelperSpawn] } { 
      $rt::db killSynthHelper $hsKey
   } 
   source $::env(HRT_TCL_PATH)/rtSynthCleanup.tcl
   return -code "error" $rt::result
 }
}
